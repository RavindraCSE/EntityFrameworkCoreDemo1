// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebApp_EfCore1.DBFirstModels;

public partial class FusionStackDbFirstContext : DbContext
{
    public FusionStackDbFirstContext(DbContextOptions<FusionStackDbFirstContext> options)
        : base(options)
    {
    }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Department> Departments { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<City>(entity =>
        {
            entity.Property(e => e.LocationName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.City)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy).IsRequired();
            entity.Property(e => e.CustomerEmail)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CustomerName)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Department>(entity =>
        {
            entity.ToTable("Department");

            entity.HasIndex(e => e.CityId, "IX_Department_CityId");

            entity.Property(e => e.CreatedBy).IsRequired();
            entity.Property(e => e.DepartmentName)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.City).WithMany(p => p.Departments).HasForeignKey(d => d.CityId);
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasIndex(e => e.DepartmentId, "IX_Employees_DepartmentId");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasDefaultValue("");
            entity.Property(e => e.Age).HasDefaultValue(18);
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasDefaultValue("");
            entity.Property(e => e.EmployeeName)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Gender)
                .IsRequired()
                .HasMaxLength(2);

            entity.HasOne(d => d.Department).WithMany(p => p.Employees).HasForeignKey(d => d.DepartmentId);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}